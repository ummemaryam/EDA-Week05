# -*- coding: utf-8 -*-
"""EDA_Week05.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jj6WQIoQbYKAkojk8xB9A9K32pIhtLpI
"""

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio
from wordcloud import WordCloud
import matplotlib.pyplot as plt
import plotly.express as px
pio.templates.default = "plotly_white"

# Read the dataset
df = pd.read_csv("/content/Instagram data.csv", encoding='latin1')

# Show column names and info
print(df.info())

# Show descriptive statistics
print(df.describe())

# Check for missing values
print(df.isnull().sum())

# Distribution of Impressions
fig = px.histogram(df, x="Impressions", title="Distribution of Impressions")
fig.show()

# Impressions on Each Post Over Time
fig = px.line(df, x=df.index, y="Impressions", title="Impressions Over Time")
fig.show()

# Metrics from Each Post Over Time
fig = px.line(df, x=df.index, y=["Likes", "Saves", "Follows"], title="Metrics Over Time")
fig.show()

# Pie Chart for Distribution of Reach from Different Sources
source_sums = df[["From Home", "From Hashtags", "From Explore", "From Other"]].sum()
fig_pie = px.pie(names=source_sums.index, values=source_sums.values, title="Distribution of Reach from Different Sources")
fig_pie.show()

# Convert engagement columns to numeric
engagement_columns = ["Saves", "Comments", "Shares", "Likes"]
df[engagement_columns] = df[engagement_columns].apply(pd.to_numeric, errors='coerce')
# Pie Chart for Distribution of Engagement Sources
engagement_sums = df[engagement_columns].sum()
fig_engagement = px.pie(names=engagement_sums.index, values=engagement_sums.values, title="Distribution of Engagement Sources")
fig_engagement.show()

# Relationship between Profile Visits and Follows
fig = px.scatter(df, x="Profile Visits", y="Follows", title="Profile Visits vs Follows")
fig.show()

# Type of Hashtags Used (Word Cloud)
hashtags_text = ' '.join(df['Hashtags'])
wordcloud = WordCloud(width=800, height=400, max_words=200, background_color='black').generate(hashtags_text)
fig = go.Figure(go.Image(z=wordcloud.to_array(), hoverinfo="none"))
fig.update_layout(title="Word Cloud of Hashtags")
fig.show()

# Correlation between all features
fig_corr = px.imshow(df.corr(), title="Correlation Between All Features")
fig_corr.show()

# Split hashtags into individual words
hashtags_list = ' '.join(df['Hashtags']).split()

# Create a DataFrame with the counts of each hashtag
hashtags_counts = pd.DataFrame({'Hashtag': hashtags_list})
hashtags_counts = hashtags_counts['Hashtag'].value_counts().reset_index()
hashtags_counts.columns = ['Hashtag', 'Count']

# Create a bar graph
fig_bar = px.bar(hashtags_counts, x='Hashtag', y='Count', title='Distribution of Hashtags')
fig_bar.update_layout(xaxis_title='Hashtag', yaxis_title='Count')
fig_bar.show()

# Split hashtags into individual words
df['Hashtags'] = df['Hashtags'].apply(lambda x: str(x).split())

# Create a new DataFrame with hashtags, likes, and impressions
hashtags_likes_impressions = pd.DataFrame(columns=['Hashtag', 'Likes', 'Impressions'])

for index, row in df.iterrows():
    for hashtag in row['Hashtags']:
        hashtags_likes_impressions = hashtags_likes_impressions.append({
            'Hashtag': hashtag,
            'Likes': row['Likes'],
            'Impressions': row['Impressions']
        }, ignore_index=True)

# Group by hashtag and calculate the total likes and impressions for each hashtag
hashtags_likes_impressions_grouped = hashtags_likes_impressions.groupby('Hashtag').agg({'Likes': 'sum', 'Impressions': 'sum'}).reset_index()

# Create a bar graph for Likes distribution
fig_likes = px.bar(hashtags_likes_impressions_grouped, x='Hashtag', y='Likes',
                   title='Likes Distribution for each Hashtag', labels={'value': 'Likes Count'})

# Create a bar graph for Impressions distribution
fig_impressions = px.bar(hashtags_likes_impressions_grouped, x='Hashtag', y='Impressions',
                         title='Impressions Distribution for each Hashtag', labels={'value': 'Impressions Count'})

# Show the figures
fig_likes.show()
fig_impressions.show()

"""Based on the exploratory data analysis (EDA) performed on the provided Instagram dataset, the following key observations and insights are as follows:

Column Names and Data Info:

The dataset contains columns such as Impressions, From Home, From Hashtags, From Explore, From Other, Saves, Comments, Shares, Likes, Profile Visits, Follows, Caption, and Hashtags.
Descriptive Statistics:

Descriptive statistics provide an overview of the central tendency and variability of numerical columns, aiding in understanding the data distribution.
Missing Values:

The dataset does not appear to contain any missing values, ensuring the completeness of the data for analysis.
Distribution of Impressions:

The distribution of Impressions, a key feature related to Instagram post reach, shows varying levels of reach for different posts.
Number of Impressions Over Time:

Visualization of the number of impressions on each post over time indicates potential trends or patterns in post reach.
Metrics Over Time:

Analysis of metrics such as Likes, Saves, and Follows over time provides insights into user engagement dynamics.
Distribution of Reach from Different Sources:

A box plot reveals the distribution of reach from different sources, with "From Home" being a significant contributor.
Distribution of Engagement Sources:

A pie chart illustrates the distribution of engagement sources, including Saves, Comments, Shares, Likes, and Follows.
Relationship Between Profile Visits and Follows:

A scatter plot with a line indicates the relationship between the number of profile visits and follows, showcasing potential correlations.
Word Cloud of Hashtags:

A word cloud visually represents the types of hashtags used in posts, providing insights into popular themes.
Correlation Between Features:

A correlation matrix helps identify relationships between different features, aiding in understanding dependencies within the dataset.
Distribution of Hashtags:

A bar graph illustrates the distribution of hashtags, highlighting the most frequently used ones across all posts.
Likes and Impressions by Hashtag:

Separate bar graphs show the distribution of likes and impressions received from the presence of each hashtag in posts.
In conclusion, this EDA provides valuable insights into the Instagram dataset, offering a comprehensive understanding of post reach, engagement, and hashtag dynamics. Further analysis and modeling can be performed based on these observations to extract additional insights or inform decision-making processes.






"""